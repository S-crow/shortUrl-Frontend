{"ast":null,"code":"var _jsxFileName = \"/Users/silvia/Desktop/Formations/LeReacteur/react/to-do-list/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTask: \"\",\n      tabLists: [{\n        name: \"phrase1\",\n        done: true\n      }, {\n        name: \"phrase2\",\n        done: false\n      }, {\n        name: \"phrase3\",\n        done: true\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \" => TO Do LiSt <= \"), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.tabLists.map((element, index) => {\n      if (element.done === true) {\n        return React.createElement(\"div\", {\n          className: \"cross\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2.splice(...index, 1);\n            console.log(tabList2);\n            this.setState({\n              tabList: tabList2\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"X\"), React.createElement(\"li\", {\n          onClick: () => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2[index].done = !tabList2[index].done; // if(tabList2[index].done === false) {\n            //   tabList2[index].done = true\n            // } else {\n            //   tabList2[index].done = false\n            // }\n\n            this.setState({\n              tabList: tabList2\n            });\n          },\n          className: \"task-done list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, element.name));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"cross\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2.splice(index, 1);\n            this.setState({\n              tabList: tabList2\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"X\"), React.createElement(\"li\", {\n          onClick: () => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2[index].done = !tabList2[index].done; // if(tabList2[index].done === false) {\n            //   tabList2[index].done = true\n            // } else {\n            //   tabList2[index].done = false\n            // }\n\n            this.setState({\n              tabList: tabList2\n            });\n          },\n          className: \"list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, element.name));\n      }\n    })), React.createElement(\"input\", {\n      value: this.state.newTask,\n      onChange: e => this.setState({\n        newTask: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        let tabList2 = [...this.state.tabLists];\n        tabList2.push({\n          name: this.state.newTask,\n          done: false\n        });\n        this.setState({\n          tabLists: tabList2,\n          newTask: \"\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"OK\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/silvia/Desktop/Formations/LeReacteur/react/to-do-list/src/App.js"],"names":["React","App","Component","state","newTask","tabLists","name","done","render","map","element","index","tabList2","splice","console","log","setState","tabList","e","target","value","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nclass App extends React.Component {\n  state = {\n    newTask: \"\",\n    tabLists: [\n      {\n        name: \"phrase1\",\n        done: true\n      },\n      {\n        name: \"phrase2\",\n        done: false\n      },\n      {\n        name: \"phrase3\",\n        done: true\n      }\n    ]\n  };\n  render() {\n    return (\n      <div>\n        <h1> => TO Do LiSt &lt;= </h1>\n        <ul className=\"list\">\n          {this.state.tabLists.map((element, index) => {\n            if (element.done === true) {\n              return (\n                <div className=\"cross\" key={index}>\n                  <button\n                    onClick={() => {\n                      let tabList2 = [...this.state.tabLists];\n                      tabList2.splice(...index, 1);\n                      console.log(tabList2);\n                      this.setState({ tabList: tabList2 });\n                    }}\n                  >\n                    X\n                  </button>\n                  <li\n                    onClick={() => {\n                      let tabList2 = [...this.state.tabLists];\n                      tabList2[index].done = !tabList2[index].done;\n                      // if(tabList2[index].done === false) {\n                      //   tabList2[index].done = true\n                      // } else {\n                      //   tabList2[index].done = false\n                      // }\n\n                      this.setState({ tabList: tabList2 });\n                    }}\n                    className=\"task-done list\"\n                  >\n                    {element.name}\n                  </li>\n                </div>\n              );\n            } else {\n              return (\n                <div className=\"cross\" key={index}>\n                  <button\n                    onClick={() => {\n                      let tabList2 = [...this.state.tabLists];\n                      tabList2.splice(index, 1);\n                      this.setState({ tabList: tabList2 });\n                    }}\n                  >\n                    X\n                  </button>\n                  <li\n                    onClick={() => {\n                      let tabList2 = [...this.state.tabLists];\n                      tabList2[index].done = !tabList2[index].done;\n                      // if(tabList2[index].done === false) {\n                      //   tabList2[index].done = true\n                      // } else {\n                      //   tabList2[index].done = false\n                      // }\n\n                      this.setState({ tabList: tabList2 });\n                    }}\n                    className=\"list\"\n                  >\n                    {element.name}\n                  </li>\n                </div>\n              );\n            }\n          })}\n        </ul>\n        <input\n          value={this.state.newTask}\n          onChange={e => this.setState({ newTask: e.target.value })}\n        />\n        <button\n          onClick={() => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2.push({ name: this.state.newTask, done: false });\n            this.setState({ tabLists: tabList2, newTask: \"\" });\n          }}\n        >\n          OK\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}