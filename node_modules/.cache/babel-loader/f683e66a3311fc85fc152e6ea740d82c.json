{"ast":null,"code":"var _jsxFileName = \"/Users/silvia/Desktop/Formations/LeReacteur/react/to-do-list/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTask: \"\",\n      tabLists: [{\n        name: \"phrase1\",\n        done: true\n      }, {\n        name: \"phrase2\",\n        done: false\n      }, {\n        name: \"phrase3\",\n        done: true\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \" => TO Do LiSt <= \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.tabLists.map(element => {\n      if (element.done === true) {\n        return React.createElement(\"li\", {\n          className: \"task-done\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, element.name);\n      } else {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, element.name);\n      }\n    })), React.createElement(\"input\", {\n      value: this.state.newTask,\n      onChange: e => this.setState({\n        newTask: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        const tabList2 = [...this.state.tabLists];\n        tabList2.push({\n          name: this.state.newTask,\n          done: false\n        });\n        this.setState({\n          tabLists: tabList2,\n          newTask: \"\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"OK\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/silvia/Desktop/Formations/LeReacteur/react/to-do-list/src/App.js"],"names":["React","App","Component","state","newTask","tabLists","name","done","render","map","element","e","setState","target","value","tabList2","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADQ,EAKR;AACED,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALQ,EASR;AACED,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,IAAI,EAAE;AAFR,OATQ;AAFJ,KADwB;AAAA;;AAkBhCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWE,QAAX,CAAoBI,GAApB,CAAwBC,OAAO,IAAI;AAClC,UAAIA,OAAO,CAACH,IAAR,KAAiB,IAArB,EAA2B;AACzB,eAAO;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BG,OAAO,CAACJ,IAAnC,CAAP;AACD,OAFD,MAEO;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKI,OAAO,CAACJ,IAAb,CAAP;AACD;AACF,KANA,CADH,CAFF,EAWE;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,OADpB;AAEE,MAAA,QAAQ,EAAEO,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAEO,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAeE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,cAAMC,QAAQ,GAAG,CAAC,GAAG,KAAKZ,KAAL,CAAWE,QAAf,CAAjB;AACAU,QAAAA,QAAQ,CAACC,IAAT,CAAc;AAAEV,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,OAAnB;AAA4BG,UAAAA,IAAI,EAAE;AAAlC,SAAd;AACA,aAAKK,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAEU,QAAZ;AAAsBX,UAAAA,OAAO,EAAE;AAA/B,SAAd;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,CADF;AA2BD;;AA9C+B;;AAiDlC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nclass App extends React.Component {\n  state = {\n    newTask: \"\",\n    tabLists: [\n      {\n        name: \"phrase1\",\n        done: true\n      },\n      {\n        name: \"phrase2\",\n        done: false\n      },\n      {\n        name: \"phrase3\",\n        done: true\n      }\n    ]\n  };\n  render() {\n    return (\n      <div>\n        <h1> => TO Do LiSt &lt;= </h1>\n        <ul>\n          {this.state.tabLists.map(element => {\n            if (element.done === true) {\n              return <li className=\"task-done\">{element.name}</li>;\n            } else {\n              return <li>{element.name}</li>;\n            }\n          })}\n        </ul>\n        <input\n          value={this.state.newTask}\n          onChange={e => this.setState({ newTask: e.target.value })}\n        />\n        <button\n          onClick={() => {\n            const tabList2 = [...this.state.tabLists];\n            tabList2.push({ name: this.state.newTask, done: false });\n            this.setState({ tabLists: tabList2, newTask: \"\" });\n          }}\n        >\n          OK\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}