{"ast":null,"code":"var _jsxFileName = \"/Users/silvia/Desktop/Formations/LeReacteur/react/to-do-list/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTask: \"\",\n      tabLists: [\"<3\", \"Danser\", \"<3\"],\n      taskFinish: [\"----------\"],\n      taskRemove: [\" X \"]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" => TO Do LiSt <= \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.state.tabLists.map(value => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, value);\n    })), React.createElement(\"input\", {\n      newTask: this.state.newTask,\n      onChange: e => this.setState({\n        newTask: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        let tabList2 = [...this.state.tabLists];\n        tabList2.push(this.state.newTask);\n        this.setState({\n          tabLists: tabList2\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"OK\"), React.createElement(\"button\", {\n      onClick: value => {\n        this.state.taskRemove.splice(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/silvia/Desktop/Formations/LeReacteur/react/to-do-list/src/App.js"],"names":["React","App","Component","state","newTask","tabLists","taskFinish","taskRemove","render","map","value","e","setState","target","tabList2","push","splice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,QAAP,EAAiB,IAAjB,CAFJ;AAGNC,MAAAA,UAAU,EAAE,CAAC,YAAD,CAHN;AAINC,MAAAA,UAAU,EAAE,CAAC,KAAD;AAJN,KADwB;AAAA;;AAOhCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWE,QAAX,CAAoBI,GAApB,CAAwBC,KAAK,IAAI;AAChC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,KAAN,CAAP;AACD,KAFA,CADH,CAFF,EAOE;AACE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,OADtB;AAEE,MAAA,QAAQ,EAAEO,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAEO,CAAC,CAACE,MAAF,CAASH;AAApB,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAWE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,YAAII,QAAQ,GAAG,CAAC,GAAG,KAAKX,KAAL,CAAWE,QAAf,CAAf;AACAS,QAAAA,QAAQ,CAACC,IAAT,CAAc,KAAKZ,KAAL,CAAWC,OAAzB;AACA,aAAKQ,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAES;AAAZ,SAAd;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAoBE;AACE,MAAA,OAAO,EAAEJ,KAAK,IAAI;AAChB,aAAKP,KAAL,CAAWI,UAAX,CAAsBS,MAAtB,CAA6BN,KAA7B;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,CADF;AA4BD;;AApC+B;;AAuClC,eAAeT,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nclass App extends React.Component {\n  state = {\n    newTask: \"\",\n    tabLists: [\"<3\", \"Danser\", \"<3\"],\n    taskFinish: [\"----------\"],\n    taskRemove: [\" X \"]\n  };\n  render() {\n    return (\n      <div>\n        <h1> => TO Do LiSt &lt;= </h1>\n        <ul>\n          {this.state.tabLists.map(value => {\n            return <div>{value}</div>;\n          })}\n        </ul>\n        <input\n          newTask={this.state.newTask}\n          onChange={e => this.setState({ newTask: e.target.value })}\n        />\n        <button\n          onClick={() => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2.push(this.state.newTask);\n            this.setState({ tabLists: tabList2 });\n          }}\n        >\n          OK\n        </button>\n        <button\n          onClick={value => {\n            this.state.taskRemove.splice(value);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}