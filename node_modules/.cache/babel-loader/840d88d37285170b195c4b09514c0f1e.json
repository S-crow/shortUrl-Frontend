{"ast":null,"code":"var _jsxFileName = \"/Users/silvia/Desktop/Formations/LeReacteur/react/to-do-project/to-do-list-front/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTask: \"\",\n      tabLists: [{\n        name: \"phrase1\",\n        done: true\n      }, {\n        name: \"phrase2\",\n        done: false\n      }, {\n        name: \"phrase3\",\n        done: true\n      }]\n    };\n\n    this.miseaJour = async () => {\n      const response = await axios.get(\"http://localhost:3001/\");\n      console.log(response.data);\n      this.setState({\n        tabLists: response.data //isLoading: false,\n\n      });\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.miseaJour();\n    } catch (error) {\n      alert(\"problème\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" => TO Do LiSt <= \"), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.tabLists.map((element, index) => {\n      if (element.done === true) {\n        return React.createElement(\"div\", {\n          className: \"cross\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2.splice(index, 1);\n            this.setState({\n              tabLists: tabList2\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"X\"), React.createElement(\"li\", {\n          onClick: () => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2[index].done = !tabList2[index].done; // if(tabList2[index].done === false) {\n            //   tabList2[index].done = true\n            // } else {\n            //   tabList2[index].done = false\n            // }\n\n            this.setState({\n              tabList: tabList2\n            });\n          },\n          className: \"task-done list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, element.name));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"cross\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2.splice(index, 1);\n            this.setState({\n              tabLists: tabList2\n            });\n            console.log(tabList2);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"X\"), React.createElement(\"li\", {\n          onClick: () => {\n            let tabList2 = [...this.state.tabLists];\n            tabList2[index].done = !tabList2[index].done; // if(tabList2[index].done === false) {\n            //   tabList2[index].done = true\n            // } else {\n            //   tabList2[index].done = false\n            // }\n\n            this.setState({\n              tabList: tabList2\n            });\n          },\n          className: \"list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, element.name));\n      }\n    })), React.createElement(\"input\", {\n      value: this.state.newTask,\n      onChange: e => this.setState({\n        newTask: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: async () => {\n        await axios.post(\"http://localhost:3001/create\", {\n          name: this.state.newTask\n        });\n        this.setState({\n          newTask: \"\"\n        });\n        this.miseaJour(); // let tabList2 = [...this.state.tabLists];\n        // tabList2.push({ name: this.state.newTask, done: false });\n        // this.setState({ tabLists: tabList2, newTask: \"\" });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"OK\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/silvia/Desktop/Formations/LeReacteur/react/to-do-project/to-do-list-front/src/App.js"],"names":["React","axios","App","Component","state","newTask","tabLists","name","done","miseaJour","response","get","console","log","data","setState","componentDidMount","error","alert","render","map","element","index","tabList2","splice","tabList","e","target","value","post"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nclass App extends React.Component {\n  state = {\n    newTask: \"\",\n    tabLists: [\n      {\n        name: \"phrase1\",\n        done: true\n      },\n      {\n        name: \"phrase2\",\n        done: false\n      },\n      {\n        name: \"phrase3\",\n        done: true\n      }\n    ]\n  };\n\n  async componentDidMount() {\n    try {\n      this.miseaJour();\n    } catch (error) {\n      alert(\"problème\");\n    }\n  }\n  miseaJour = async () => {\n    const response = await axios.get(\"http://localhost:3001/\");\n    console.log(response.data);\n    this.setState({\n      tabLists: response.data\n      //isLoading: false,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1> => TO Do LiSt &lt;= </h1>\n        <ul className=\"list\">\n          {this.state.tabLists.map((element, index) => {\n            if (element.done === true) {\n              return (\n                <div className=\"cross\" key={index}>\n                  <button\n                    onClick={() => {\n                      let tabList2 = [...this.state.tabLists];\n                      tabList2.splice(index, 1);\n                      this.setState({ tabLists: tabList2 });\n                    }}\n                  >\n                    X\n                  </button>\n                  <li\n                    onClick={() => {\n                      let tabList2 = [...this.state.tabLists];\n                      tabList2[index].done = !tabList2[index].done;\n                      // if(tabList2[index].done === false) {\n                      //   tabList2[index].done = true\n                      // } else {\n                      //   tabList2[index].done = false\n                      // }\n\n                      this.setState({ tabList: tabList2 });\n                    }}\n                    className=\"task-done list\"\n                  >\n                    {element.name}\n                  </li>\n                </div>\n              );\n            } else {\n              return (\n                <div className=\"cross\" key={index}>\n                  <button\n                    onClick={() => {\n                      let tabList2 = [...this.state.tabLists];\n                      tabList2.splice(index, 1);\n                      this.setState({ tabLists: tabList2 });\n                      console.log(tabList2);\n                    }}\n                  >\n                    X\n                  </button>\n                  <li\n                    onClick={() => {\n                      let tabList2 = [...this.state.tabLists];\n                      tabList2[index].done = !tabList2[index].done;\n                      // if(tabList2[index].done === false) {\n                      //   tabList2[index].done = true\n                      // } else {\n                      //   tabList2[index].done = false\n                      // }\n\n                      this.setState({ tabList: tabList2 });\n                    }}\n                    className=\"list\"\n                  >\n                    {element.name}\n                  </li>\n                </div>\n              );\n            }\n          })}\n        </ul>\n        <input\n          value={this.state.newTask}\n          onChange={e => this.setState({ newTask: e.target.value })}\n        />\n        <button\n          onClick={async () => {\n            await axios.post(\"http://localhost:3001/create\", {\n              name: this.state.newTask\n            });\n            this.setState({ newTask: \"\" });\n            this.miseaJour();\n\n            // let tabList2 = [...this.state.tabLists];\n            // tabList2.push({ name: this.state.newTask, done: false });\n            // this.setState({ tabLists: tabList2, newTask: \"\" });\n          }}\n        >\n          OK\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}